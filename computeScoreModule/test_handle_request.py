import pytest
import json
import requests

import handle_request


def test_smoketest():
    event = {
        "Records": [
            {
                "body": '{"season": 2019, "week": 3, "home_team": "Northwestern", "away_team": "UNLV", "home_points": 30, "away_points": 14, "dryrun": true}'
            }
        ]
    }
    response = handle_request.handle_request(event, None)
    print(response)
    assert response
    assert 200 <= response["statusCode"] < 300


def test_getscore():
    game = {
        "season": 2019,
        "week": 3,
        "home_team": "Northwestern",
        "away_team": "UNLV",
        "home_points": 30,
        "away_points": 14,
    }
    title_solution = "{} vs. {}".format(game["home_team"], game["away_team"])
    score_solution = 0.006643099106481705
    play_by_play_solution = [
        0.08464092725875183,
        0.0766621941092686,
        0.08136723948284785,
        0.07412433414404869,
        0.06570606879490244,
        0.057206180192254985,
        0.06275629376155108,
        0.059331281967487604,
        0.049161552594493806,
        0.03248401074710235,
        0.026792669366802174,
        0.025749221560685487,
        0.04573914853482249,
        0.0612428981329198,
        0.08038299647566953,
        0.0823906278629735,
        0.09192115104472816,
        0.0952285187866656,
        0.09000928951661351,
        0.08005333483709227,
        0.07013640111907453,
        0.06543787387078089,
        0.05971421765532418,
        0.05419666162043457,
        0.05422686590496739,
        0.05483343027311394,
        0.0545010743324584,
        0.051655450495408615,
        0.05109810863804961,
        0.05535092481710898,
        0.0571983040635636,
        0.0511798906578147,
        0.042364179967929814,
        0.03589688366932031,
        0.03991218842703844,
        0.03961600672406199,
        0.04868663013100161,
        0.047298635560396374,
        0.050955379157158344,
        0.04189981271201182,
        0.04948606575373763,
        0.05910333920701897,
        0.06964797687042805,
        0.07165296082280766,
        0.06821155454067777,
        0.06651754192053334,
        0.06040552605409758,
        0.05790914481055479,
        0.05321470131598938,
        0.051576237767913945,
        0.05228250007278342,
        0.09064899361853647,
        0.1338337175713602,
        0.17919048447525046,
        0.19074932867085334,
        0.18804195406765212,
        0.18472641991861893,
        0.1630058975615789,
        0.14483025450089645,
        0.12597917172062179,
        0.12737880376886798,
        0.13153447466978108,
        0.13485391363342192,
        0.1394030157327434,
        0.1364066164972296,
        0.13497766090999117,
        0.13487848573568564,
        0.14714416234458957,
        0.1489096809428411,
        0.14049086072394376,
        0.13635988355982054,
        0.14937481120860507,
        0.16551683942489395,
        0.16178776488216742,
        0.1436910588833579,
        0.12696278192023888,
        0.11641060521957354,
        0.110111685411676,
        0.1070100505429794,
        0.10281263668226555,
        0.09755758790416606,
        0.09306856963532321,
        0.10011302968080808,
        0.11110215149278553,
        0.11725306927542227,
        0.12402493159100973,
        0.12773241190702075,
        0.12372778332113003,
        0.12330297436636428,
        0.11486417798586679,
        0.11278019249354247,
        0.09947020458791123,
        0.09669980462992456,
        0.09522625453420493,
        0.09163681250256832,
        0.08166301825734774,
        0.09042487934710645,
        0.10929201968715851,
        0.12774151506203246,
        0.12381040934136796,
        0.11013278177652215,
        0.10422802324872411,
        0.11318195372660907,
        0.10892749125742422,
        0.09874517091952188,
        0.0813246819306593,
        0.09371766844600771,
        0.11824495028445507,
        0.1314077953159328,
        0.13766877291839444,
        0.12949597721007144,
        0.1391467601061779,
        0.1283369688439849,
        0.09165635548791684,
        0.04538438197506226,
        0.017879975153748617,
        0.022365817015054763,
        0.026668200314045265,
        0.03091635104191089,
        0.028676028886389798,
        0.026695747644716643,
        0.021420983193081018,
        0.02463024990626887,
        0.02192577604393738,
        0.018180047606584537,
        0.01055436480526121,
        0.008456026250003745,
        0.01268726095755035,
        0.01598823429494504,
        0.018097557834199307,
        0.017210968019714556,
        0.020098765283902864,
        0.02454747951259743,
        0.022916938019559296,
        0.019511739752238338,
        0.016592927404137942,
        0.020311508400277845,
        0.01889029125389996,
        0.014823611451517374,
        0.008068066117591735,
        0.006410471653601609,
        0.006354320173720988,
        0.005602247368637829,
        0.0046145634318056255,
        0.0038058770362277747,
        0.00497898052349773,
        0.007913856624664817,
        0.010482545011907854,
        0.012369812530132288,
        0.011327445242828324,
        0.010232858662497199,
        0.010384268454548243,
        0.012174307430323475,
        0.010989676930342066,
        0.008347277271761655,
        0.0046337190156637105,
        0.004564583297362053,
        0.005657358071423128,
        0.008662024214932154,
        0.011252598826908175,
        0.008808442563972582,
        0.0046904883733175735,
        0.0005089538039300123,
        0.0008805259811944429,
        0.0008120479828862178,
        0.0005061707793553675,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        5.921189464667501e-16,
        5.921189464667501e-16,
        5.921189464667501e-16,
        0.0,
    ]

    title, score, play_by_play = handle_request.get_score(game)
    assert title == title_solution
    assert score == score_solution
    assert play_by_play == play_by_play_solution
